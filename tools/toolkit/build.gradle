plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/plugins-release' }
    maven { url 'https://jitpack.io' }
}

tasks.named('jar') {
    enabled = false
    dependsOn shadowJar
}

shadowJar {
    archiveBaseName.set('Toolkit')
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation('com.github.tronprotocol.java-tron:framework:GreatVoyage-v4.7.7') {
        exclude group: 'com.fasterxml.jackson', module: 'jackson-bom'
        exclude group: "pull-parser", module: "pull-parser"
    }
    testImplementation platform('com.fasterxml.jackson:jackson-bom:2.14.0')

    implementation group: 'info.picocli', name: 'picocli', version: '4.6.3'
    implementation group: 'com.typesafe', name: 'config', version: '1.3.2'
    implementation group: 'me.tongfei', name: 'progressbar', version: '0.9.3'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.69'
    implementation group: 'org.rocksdb', name: 'rocksdbjni', version: '5.15.10'
    implementation 'io.github.tronprotocol:leveldbjni-all:1.18.2'
    implementation 'io.github.tronprotocol:leveldb:1.18.2'

    implementation('com.github.tronprotocol.java-tron:chainbase:GreatVoyage-v4.7.7') {
        exclude group: 'com.fasterxml.jackson', module: 'jackson-bom'
        exclude group: "pull-parser", module: "pull-parser"
    }
    implementation platform('com.fasterxml.jackson:jackson-bom:2.14.0')
    implementation group: 'info.picocli', name: 'picocli', version: '4.6.3'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

application {
    // Define the main class for the application.
    mainClass = 'org.tron.plugins.Toolkit'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.tron.plugins.Toolkit'
        )
    }
}

checkstyle {
    toolVersion = '8.41'
    configFile = file("../../conf/checkstyle/checkStyle.xml")
}

task checkstyleToolkitMain(type: Checkstyle) {
    source 'src/main/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

task checkstyleToolkitTest(type: Checkstyle) {
    source 'src/test/java'
    include '**/*.java'
    exclude '**/generated/**'
    classpath = files()
    ignoreFailures = false
}

check.dependsOn checkstyleToolkitMain, checkstyleToolkitTest
