apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      # Add init container to wait for Thanos Receive
      initContainers:
      - name: wait-for-receive
        image: curlimages/curl:8.5.0
        command: ['sh', '-c', 'until curl -s http://thanos-receive.default.svc.cluster.local:10909/-/ready; do echo "Waiting for Thanos Receive"; sleep 5; done']
      containers:
      - name: thanos
        image: quay.io/thanos/thanos:v0.33.0
        args:
        - "query"
        - "--query.replica-label=receive_replica" # set to the same as thanos-receive, to do deduplication
        - "--http-address=0.0.0.0:9091"
        - "--endpoint=dnssrv+_grpc._tcp.thanos-receive.default.svc.cluster.local:10907" # add all receive pods
        ports:
        - containerPort: 9091 # for query provide PromQL API
          name: http
        # Add readiness probe
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9091
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 6

---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
spec:
  type: NodePort
  selector:
    app: thanos-query
  ports:
    - name: http
      port: 9091
      targetPort: 9091
      nodePort: 30001