version: '3.8'
services:
  tron-node:
    image: tronprotocol/java-tron:latest
    container_name: tron-node
    user: root
    networks:
      - tron_network
    deploy:
      resources:
        limits:
          memory: 16g
    ports:
      - "8090:8090" # for external http API request
      - "9527:9527" # used for metric API
    volumes:
      - ../conf:/java-tron/conf # ensure the config path is correct, make sure the config file metric is enabled
      - ./datadir:/java-tron/data # mount a local directory to make the block data persistent.
      - ./logs:/java-tron/logs
    command: >
      -jvm "{-Xmx12g -Xmn2g -XX:+UseConcMarkSweepGC -XX:+PrintGC -Xloggc:./logs/gc.log }" -c ./conf/main_net_config.conf -d /java-tron/data

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    user: root
    networks:
      - tron_network
    volumes:
      - ./logs:/var/log
      - ./conf:/etc/promtail
      - ./promtail-data:/cache  # Add this line to map Promtail's local data to the host, important!
    command: >
      -config.file=/etc/promtail/promtail-config.yml
    restart: unless-stopped

  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    user: root
    networks:
      - tron_network
    ports:
      - "3100:3100"
    volumes:
      - ./conf:/etc/loki
      - ./loki-data:/loki  # Add this line to map Loki's local data to the host
    command: >
      -config.file=/etc/loki/loki-minio.yml
      -config.expand-env=true
    restart: unless-stopped

  minio: # about 5G of disk space for 1 year java-tron metrics, java-tron version xxx
    image: minio/minio:RELEASE.2019-01-31T00-31-19Z
    container_name: minio
    user: root
    networks:
      - tron_network
    restart: always  # Optional: Restart policy
    ports:
      - "9000:9000"  # Map port 9000 on the host to port 9000 in the container
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: melovethanos
    volumes:
      - ./minio:/data  # Bind mount the host directory to the container
    command: server /data  # Command to run MinIO server

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    user: root
    networks:
      - tron_network
    deploy:
      resources:
        limits:
          memory: 1g
    ports:
      - "3000:3000"
    restart: unless-stopped

networks:
  tron_network:
    driver: bridge
